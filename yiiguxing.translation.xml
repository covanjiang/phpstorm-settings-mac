<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="444" />
    <option name="newTranslationDialogWidth" value="750" />
    <option name="newTranslationDialogX" value="320" />
    <option name="newTranslationDialogY" value="462" />
    <histories>
      <item value="This class only exists here for IDE (PHPStormNetbeans...) autocompletion." />
      <item value="Sort directions indexed by attribute names. Sort direction can be either&#10;  `SORT_ASC` for ascending order or `SORT_DESC` for descending order. Note that the type of this property&#10;  differs in getter and setter. See [[getAttributeOrders()]] and [[setAttributeOrders()]] for details." />
      <item value="optional configuration for the number formatter. This parameter will be merged with [[numberFormatterOptions]]." />
      <item value="the number of digits after the decimal point." />
      <item value="he form name to use to load the data into the model, empty string when form not use.&#10;      If not set, [[formName()]] is used." />
      <item value="Returns all role assignment information for the specified user." />
      <item value="&#10;a PHP callback for customizing the relation associated with the junction table. Its signature should be `function(query)`, where `query` is the query to be customized.&#10;" />
      <item value="&#10;a PHP callback for customizing the relation associated with the junction table. Its signature should be `function(query)`, where `query` is the query to be customized." />
      <item value="hierarchy" />
      <item value="the type of the token. The value of this parameter depends on the implementation." />
      <item value="Unprocessable entity" />
      <item value="MethodNotAllowedHttpException represents a &quot;Method Not Allowed&quot; HTTP exception with status code 405." />
      <item value="NotFoundHttpException represents a &quot;Not Found&quot; HTTP exception with status code 404." />
      <item value="UnauthorizedHttpException represents an &quot;Unauthorized&quot; HTTP exception with status code 401." />
      <item value="  BadRequestHttpException represents a &quot;Bad Request&quot; HTTP exception with status code 400.&#10;" />
      <item value="Cost parameter used by the Blowfish hash algorithm.&#10;      The higher the value of cost,&#10;      the longer it takes to generate the hash and to verify a password against it. Higher cost&#10;      therefore slows down a brute-force attack. For best protection against brute-force attacks,&#10;      set it to the highest value that is tolerable on production servers. The time taken to&#10;      compute the hash doubles for every increment by one of cost." />
      <item value="uncomment to avoid processing of calls to non-existing static files by Yii" />
      <item value="Code coverage support" />
      <item value="acceptance" />
      <item value="The command above will execute unit and functional tests. Unit tests are testing the system components, while functional&#10;tests are for testing user interaction. Acceptance tests are disabled by default as they require additional setup since&#10;they perform testing in real browser. " />
      <item value="- Yii won't create the database for you, this has to be done manually before you can access it.&#10;- Check and edit the other files in the `config` directory to customize your application as required.&#10;- Refer to the README in the `tests` directory for information specific to basic application tests.&#10;" />
      <item value="skeleton" />
      <item value="The number of child processes to be created when pm is set to 'static' and the&#10;; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.&#10;; This value sets the limit on the number of simultaneous requests that will be&#10;; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.&#10;; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP&#10;; CGI. The below defaults are based on a server without much resources. Don't&#10;; forget to tweak pm. to fit your needs.&#10;; Note: Used when pm is set to 'static', 'dynamic' or 'ondemand'&#10;; Note: This value is mandatory." />
      <item value="Common birthday" />
      <item value="You can use both an array or a comma-separated list of proxy addresses,&#10;    | as well as specifying whole subnets. Here are a few examples:" />
      <item value=" If your server is behind a reverse proxy, you must whitelist the proxy&#10;    | IP addresses from which CodeIgniter should trust headers such as&#10;    | HTTP_X_FORWARDED_FOR and HTTP_CLIENT_IP in order to properly identify&#10;    | the visitor's IP address." />
      <item value="Assemble" />
      <item value="Media CRM split group data wrong" />
      <item value="modality" />
      <item value="delivery" />
      <item value="[EA] New value type (bool) is not matching the resolved parameter type and might introduce types-related false-positives." />
      <item value="Target Account Campaign Relation" />
      <item value="Campaign" />
      <item value="divisor" />
      <item value="Returns a value indicating whether the named attribute has been changed." />
      <item value="Currency" />
      <item value="identifying" />
      <item value="[EA] '(float) sprintf('%.2f', duty_income)' can be used instead (reduces cognitive load, up to 6x times faster in PHP 5.x).&#10;" />
      <item value="[EA] '(float) sprintf('%.2f', duty_income)' can be used instead (reduces cognitive load, up to 6x times faster in PHP 5.x)." />
      <item value="Yesterday" />
      <item value="Yestoday" />
      <item value="settlement method" />
      <item value="Partial" />
      <item value="Prompt" />
      <item value="bread Crumbs" />
      <item value="Redundant" />
      <item value="Scalar" />
      <item value="Criteria" />
      <item value="&#10;      Determine if the request has a URI that should pass through CSRF verification.&#10;     &#10;      @param  \Illuminate\Http\Request  request&#10;      @return bool&#10;     " />
      <item value="The URIs that should be excluded from CSRF verification." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="167" />
        <entry key="ENGLISH" value="168" />
        <entry key="BOSNIAN" value="1" />
        <entry key="ESPERANTO" value="3" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1659680600712" />
  </component>
  <component name="Settings">
    <option name="keepFormat" value="true" />
    <option name="showActionsInContextMenuOnlyWithSelection" value="false" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1704686135316" />
  </component>
  <component name="Translation.Settings">
    <option name="primaryLanguage" value="CHINESE" />
  </component>
  <component name="Translation.States">
    <histories>
      <item value="Updates the whole table using the provided counter changes and conditions. For example, to increment all customers' age by 1, ```php Customer::updateAllCounters(['age' =&gt; 1]); ``` Note that this method will not trigger any events." />
      <item value="This method is invoked after deleting a record. The default implementation raises the [[EVENT_AFTER_DELETE]] event. You may override this method to do postprocessing after the record is deleted. Make sure you call the parent implementation so that the event is raised properly." />
      <item value="Repopulates this active record with the latest data from a newly fetched instance." />
      <item value="Repopulates this active record with the latest data. If the refresh is successful, an [[EVENT_AFTER_REFRESH]] event will be triggered. This event is available since version 2.0.8. @return bool whether the row still exists in the database. If `true`, the latest data will be populated to this active record. Otherwise, this record will remain unchanged." />
      <item value="Performs access check for the specified user based on the data loaded from cache. This method is internally called by [[checkAccess()]] when [[cache]] is enabled." />
      <item value="name-value pairs that would be passed to the rules associated with the roles and permissions assigned to the user." />
      <item value="Checks if the user can perform the operation as specified by the given permission. Note that you must configure &quot;authManager&quot; application component in order to use this method. Otherwise it will always return false." />
      <item value="Note that a behavior class must extend from [[Behavior]]. Behaviors can be attached using a name or anonymously. When a name is used as the array key, using this name, the behavior can later be retrieved using [[getBehavior()]] or be detached using [[detachBehavior()]]. Anonymous behaviors can not be retrieved or detached. Behaviors declared in this method will be attached to the component automatically (on demand)." />
      <item value="Returns a list of behaviors that this component should behave as. Child classes may override this method to specify the behaviors they want to behave as. The return value of this method should be an array of behavior objects or configurations indexed by behavior names. A behavior configuration can be either a string specifying the behavior class or an array of the following structure:" />
      <item value="Configurable is the interface that should be implemented by classes who support configuring its properties through the last parameter to its constructor. The interface does not declare any method. Classes implementing this interface must declare their constructors like the following: ```php public function __constructor(param1, param2, ..., config = []) ``` That is, the last parameter of the constructor must accept a configuration array. This interface is mainly used by [[\yii\di\Container]] so that it can pass object configuration as the last parameter to the implementing class' constructor. For more details and usage information on Configurable, see the [guide article on configurations](guide:concept-configurations). @author Qiang Xue &lt;qiang.xue@gmail.com&gt; @since 2.0.3" />
      <item value="@var string|array the URL for login when [[loginRequired()]] is called. If an array is given, [[UrlManager::createUrl()]] will be called to create the corresponding URL. The first element of the array should be the route to the login action, and the rest of the name-value pairs are GET parameters used to construct the login URL. For example, ```php ['sitelogin', 'ref' =&gt; 1] ``` If this property is `null`, a 403 HTTP exception will be raised when [[loginRequired()]] is called." />
      <item value="You set this property to be `false` if your application is stateless, which is often the case for RESTful APIs." />
      <item value="ote that this property will be ignored if [[enableSession]] is `false`." />
      <item value="You can modify its configuration by adding an array to your application config under `components` as it is shown in the following example:" />
      <item value="Note that User only maintains the user authentication status. It does NOT handle how to authenticate a user. The logic of how to authenticate a user should be done in the class implementing [[IdentityInterface]]. You are also required to set [[identityClass]] with the name of this class. User is configured as an application component in [[\yii\web\Application]] by default. You can access that instance via `Yii::app-&gt;user`." />
      <item value="User is the class for the `user` application component that manages the user authentication status. You may use [[isGuest]] to determine whether the current user is a guest or not. If the user is a guest, the [[identity]] property would return `null`. Otherwise, it would be an instance of [[IdentityInterface]]." />
      <item value="You may call various methods to change the user authentication status: - [[login()]]: sets the specified identity and remembers the authentication status in session and cookie; - [[logout()]]: marks the user as a guest and clears the relevant information from session and cookie; - [[setIdentity()]]: changes the user identity without touching session or cookie (this is best used in stateless RESTful API implementation)." />
      <item value="@var bool whether the login or logout should proceed. Event handlers may modify this property to determine whether the login or logout should proceed. This property is only meaningful for [[User::EVENT_BEFORE_LOGIN]] and [[User::EVENT_BEFORE_LOGOUT]] events." />
      <item value="This method is called before logging in a user. The default implementation will trigger the [[EVENT_BEFORE_LOGIN]] event. If you override this method, make sure you call the parent implementation so that the event is triggered." />
      <item value="Logs in a user. After logging in a user: - the user's identity information is obtainable from the [[identity]] property If [[enableSession]] is `true`: - the identity information will be stored in session and be available in the next requests - in case of `duration == 0`: as long as the session remains active or till the user closes the browser - in case of `duration &gt; 0`: as long as the session remains active or as long as the cookie remains valid by it's `duration` in seconds when [[enableAutoLogin]] is set `true`. If [[enableSession]] is `false`: - the `duration` parameter will be ignored @param IdentityInterface identity the user identity (which should already be authenticated) @param int duration number of seconds that the user can remain in logged-in status, defaults to `0` @return bool whether the user is logged in" />
      <item value="Finds an identity by the given token. @param mixed token the token to be looked for @param mixed type the type of the token. The value of this parameter depends on the implementation. For example, [[\yii\filters\auth\HttpBearerAuth]] will set this parameter to be `yii\filters\auth\HttpBearerAuth`. @return IdentityInterface|null the identity object that matches the given token. Null should be returned if such an identity cannot be found or the identity is not in an active state (disabled, deleted, etc.)" />
      <item value="Returns a key that can be used to check the validity of a given identity ID. The key should be unique for each individual user, and should be persistent so that it can be used to check the validity of the user identity. The space of such keys should be big enough to defeat potential identity attacks. The returned key is used to validate session and auto-login (if [[User::enableAutoLogin]] is enabled). Make sure to invalidate earlier issued authKeys when you implement force user logout, password change and other scenarios, that require forceful access revocation for old sessions. @return string|null a key that is used to check the validity of a given identity ID. @see validateAuthKey()" />
      <item value="Logs in a user by the given access token. This method will first authenticate the user by calling [[IdentityInterface::findIdentityByAccessToken()]] with the provided access token. If successful, it will call [[login()]] to log in the authenticated user. If authentication fails or [[login()]] is unsuccessful, it will return null. @param string token the access token @param mixed type the type of the token. The value of this parameter depends on the implementation. For example, [[\yii\filters\auth\HttpBearerAuth]] will set this parameter to be `yii\filters\auth\HttpBearerAuth`. @return IdentityInterface|null the identity associated with the given access token. Null is returned if the access token is invalid or [[login()]] is unsuccessful." />
      <item value="Handles authentication failure. The implementation should normally throw UnauthorizedHttpException to indicate authentication failure." />
      <item value="if authentication information is provided but is invalid." />
      <item value="he authenticated user identity. If authentication information is not provided, null will be returned." />
      <item value="Authenticates the current user." />
      <item value="Generates challenges upon authentication failure. For example, some appropriate HTTP headers may be generated. @param Response response" />
      <item value="HttpBearerAuth is an action filter that supports the authentication method based on HTTP Bearer token. You may use HttpBearerAuth by attaching it as a behavior to a controller or module, like the following: ```php public function behaviors() { return [ 'bearerAuth' =&gt; [ 'class' =&gt; \yii\filters\auth\HttpBearerAuth::class, ], ]; }" />
      <item value="Makes sure that the behaviors declared in [[behaviors()]] are attached to this component." />
      <item value="@var string the name of the table storing authorization item assignments. Defaults to &quot;auth_assignment&quot;." />
      <item value="he name of the table storing authorization item assignments. Defaults to &quot;auth_assignment&quot;." />
      <item value="Checks if the user can perform the operation as specified by the given permission. Note that you must configure &quot;authManager&quot; application component in order to use this method. Otherwise it will always return false. @param string permissionName the name of the permission (e.g. &quot;edit post&quot;) that needs access check. @param array params name-value pairs that would be passed to the rules associated with the roles and permissions assigned to the user. @param bool allowCaching whether to allow caching the result of access check. When this parameter is true (default), if the access check of an operation was performed before, its result will be directly returned when calling this method to check the same operation. If this parameter is false, this method will always call [[\yii\rbac\CheckAccessInterface::checkAccess()]] to obtain the up-to-date access result. Note that this caching is effective only within the same request and only works when `params = []`. @return bool whether the user can perform the operation as specified by the given permission." />
      <item value="hether the keyword should be escaped if it contains characters % or _. When this parameter is true (default), the special characters % (matches 0 or more characters) and _ (matches a single character) will be escaped, and the keyword will be surrounded with a % character on both ends. When this parameter is false, the keyword will be directly used for matching without any change." />
      <item value="whether the value should be escaped if partialMatch is true and the value contains characters % or _. When this parameter is true (default), the special characters % (matches 0 or more characters) and _ (matches a single character) will be escaped, and the value will be surrounded with a % character on both ends. When this parameter is false, the value will be directly used for matching without any change." />
      <item value="Adds a comparison expression to the {@link condition} property. This method is a helper that appends to the {@link condition} property with a new comparison expression. The comparison is done by comparing a column with the given value using some comparison operator. The comparison operator is intelligently determined based on the first few characters in the given value. In particular, it recognizes the following operators if they appear as the leading characters in the given value: &lt;ul&gt; &lt;li&gt;&lt;code&gt;&amp;lt;&lt;code&gt;: the column must be less than the given value.&lt;li&gt; &lt;li&gt;&lt;code&gt;&amp;gt;&lt;code&gt;: the column must be greater than the given value.&lt;li&gt; &lt;li&gt;&lt;code&gt;&amp;lt;=&lt;code&gt;: the column must be less than or equal to the given value.&lt;li&gt; &lt;li&gt;&lt;code&gt;&amp;gt;=&lt;code&gt;: the column must be greater than or equal to the given value.&lt;li&gt; &lt;li&gt;&lt;code&gt;&amp;lt;&amp;gt;&lt;code&gt;: the column must not be the same as the given value. Note that when partialMatch is true, this would mean the value must not be a substring of the column.&lt;li&gt; &lt;li&gt;&lt;code&gt;=&lt;code&gt;: the column must be equal to the given value.&lt;li&gt; &lt;li&gt;none of the above: the column must be equal to the given value. Note that when partialMatch is true, this would mean the value must be the same as the given value or be a substring of it.&lt;li&gt; &lt;ul&gt; Note that any surrounding white spaces will be removed from the value before comparison. When the value is empty, no comparison expression will be added to the search condition." />
      <item value="precision" />
      <item value="partial Match" />
      <item value="expired" />
      <item value="Performs access check for the specified user. @param string itemName the name of the operation that need access check @param mixed userId the user ID. This should can be either an integer and a string representing the unique identifier of a user. See {@link IWebUser::getId}. @param array params name-value pairs that would be passed to biz rules associated with the tasks and roles assigned to the user. Since version 1.1.11 a param with name 'userId' is added to this array, which holds the value of &lt;code&gt;userId&lt;code&gt;. @return boolean whether the operations can be performed by the user." />
      <item value="Guaranteed" />
      <item value="reactor" />
      <item value="render Response" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="44" />
        <entry key="ENGLISH" value="45" />
      </map>
    </option>
  </component>
</application>