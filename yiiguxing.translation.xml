<application>
  <component name="AppStorage">
    <histories>
      <item value="Register the permission check method on the gate. * We resolve the Gate fresh here, for benefit of long-running instances." />
      <item value="If the payload is not valid JSON or does not have the proper keys set we will // assume it is invalid and bail out of the routine since we will not be able // to decrypt the given value. We'll also check the MAC for this encryption." />
      <item value="/ Once we have the foreign key names, we'll just create a new Eloquent query // for the related models and returns the relationship instance which will // actually be responsible for retrieving and hydrating every relations." />
      <item value="If you have multiple user tables or models you may configure multiple | sources which represent each model / table. These sources may then | be assigned to any extra authentication guards you have defined." />
      <item value="All authentication drivers have a user provider. This defines how the | users are actually retrieved out of your database or other storage | mechanisms used by this application to persist your user's data." />
      <item value="Next, you may define every authentication guard for your application. | Of course, a great default configuration has been defined for you | here which uses session storage and the Eloquent user provider." />
      <item value="wildcard permission" />
      <item value="| When authenticating your first-party SPA with Sanctum you may need to | customize some of the middleware Sanctum uses while processing the | request. You may change the middleware listed below as required. |" />
      <item value="When authenticating your first-party SPA with Sanctum you may need to | customize some of the middleware Sanctum uses while processing the | request. You may change the middleware listed below as required." />
      <item value="// Next, we will take the differences of the currents and given IDs and detach // all of the entities that exist in the &quot;current&quot; array but are not in the // array of the new IDs given to the method which will complete the sync." />
      <item value="First we need to attach any of the associated models that are not currently // in this joining table. We'll spin through the given IDs, checking to see // if they exist in the array of current ones, and if not we will insert." />
      <item value="Pluralize the last word of an English, studly caps case string." />
      <item value="Dynamically handle calls into the query instance." />
      <item value="Change the autogenerated stub" />
      <item value="This value controls the number of minutes until an issued token will be | considered expired. If this value is null, personal access tokens do | not expire. This won't tweak the lifetime of first-party sessions. |" />
      <item value="You may specify multiple password reset configurations if you have more | than one user table or model in the application and you want to have | separate password reset settings based on the specific user types. | | The expire time is the number of minutes that the reset token should be | considered valid. This security feature keeps tokens short-lived so | they have less time to be guessed. You may change this as needed." />
      <item value="prepend" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="14" />
        <entry key="ENGLISH" value="15" />
      </map>
    </option>
  </component>
</application>