<application>
  <component name="AppStorage">
    <histories>
      <item value="Determine if the request has a URI that should pass through verification." />
      <item value="If we actually found models we will also eager load any relationships that have been specified as needing to be eager loaded, which will solve the n+1 query issue for the developers to avoid running a lot of queries." />
      <item value="First we will check for the presence of a mutator for the set operation which simply lets the developers tweak the attribute as it is set on the model, such as &quot;json_encoding&quot; an listing of data for storage." />
      <item value="If the model is brand new" />
      <item value="This is the subdomain where Telescope will be accessible from. If the | setting is null, Telescope will reside under the same domain as the | application. Otherwise, this value will be used as the subdomain." />
      <item value="Now we are finally ready to attach the new records. Note that we'll disable // touching until after the entire operation is complete so we don't fire a // ton of touch operations until we are totally done syncing the records." />
      <item value="Next, we will take the differences of the currents and given IDs and detach // all of the entities that exist in the &quot;current&quot; array but are not in the // array of the new IDs given to the method which will complete the sync." />
      <item value="First we need to attach any of the associated models that are not currently // in this joining table. We'll spin through the given IDs, checking to see // if they exist in the array of current ones, and if not we will insert." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="24" />
        <entry key="ENGLISH" value="25" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1615344637010" />
  </component>
</application>